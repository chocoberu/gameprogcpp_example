// ----------------------------------------------------------------
// From Game Programming in C++ by Sanjay Madhav
// Copyright (C) 2017 Sanjay Madhav. All rights reserved.
// 
// Released under the BSD License
// See LICENSE in root directory for full details.
// ----------------------------------------------------------------

// Request GLSL 3.3
#version 330

// Uniforms for world transform and view-proj
// 월드 변환과 뷰-투영 행렬을 위한 uniform
uniform mat4 uWorldTransform;
uniform mat4 uViewProj;

// Attribute 0 is position, 1 is normal, 2 is tex coords.
// 속성 0은 위치, 1은 노멀벡터, 2는 텍스처 좌표
layout(location = 0) in vec3 inPosition;
layout(location = 1) in vec3 inNormal;
layout(location = 2) in vec2 inTexCoord;

// Any vertex outputs (other than position)
// 버텍스 출력
out vec2 fragTexCoord;
// Normal (in world space)
// 월드 공간에서의 노멀 벡터
out vec3 fragNormal;
// Position (in world space)
// 월드 공간에서의 위치 좌표
out vec3 fragWorldPos;

void main()
{
	// Convert position to homogeneous coordinates
	// 위치를 동차 좌표로 변환
	vec4 pos = vec4(inPosition, 1.0);
	// Transform position to world space
	// 위치를 월드 공간상의 위치로 변환
	pos = pos * uWorldTransform;
	// Save world position
	// 월드 공간상의 위치를 저장
	fragWorldPos = pos.xyz;
	// Transform to clip space
	// 위치를 클립 공간 좌표로 변환
	gl_Position = pos * uViewProj;

	// Transform normal into world space (w = 0)
	// 노멀 벡터를 월드 공간상의 노멀 벡터로 변환 (w = 0)
	fragNormal = (vec4(inNormal, 0.0f) * uWorldTransform).xyz;

	// Pass along the texture coordinate to frag shader
	// 텍스처 좌표를 프래그먼트 셰이더로 전달
	fragTexCoord = inTexCoord;
}
